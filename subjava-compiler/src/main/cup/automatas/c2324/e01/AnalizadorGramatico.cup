
import automatas.c2324.e01.Analizador;
import java_cup.runtime.*;
import java.io.*;

parser code {:
	public static void main(String args[]) throws Exception {
 		FileInputStream stream = new java.io.FileInputStream(args[0]);
		Reader reader = new InputStreamReader(stream);
		try{
			new parser(new Analizador(reader)).parse();
		}
		catch ( Exception e) {
			System.out.println(e);
			System.out.println("\nAnálisis INCORRECTO !!");
			System.exit(1);}
		System.out.println("\nAnálisis Correcto ");
	}
:}


terminal ID, BOOLEANO, OP_ART, NUM, OP_ART_MEN, OP_ART_SUM, OP_LOG, OP_NOT, OP_IGUAL, OP_RLC, A_PAREN, C_PAREN;

non terminal booleano, logicas, relacionales, dato, identificador, aritmeticas, id_num;

precedence right OP_NOT;
precedence left OP_LOG;
precedence left OP_IGUAL;
precedence left OP_ART;
precedence left OP_ART_SUM;
precedence left OP_ART_MEN;

aritmeticas ::= aritmeticas OP_ART_SUM aritmeticas | aritmeticas OP_ART_MEN aritmeticas | aritmeticas OP_ART aritmeticas | A_PAREN aritmeticas C_PAREN | OP_ART_MEN aritmeticas | id_num;

logicas ::= OP_NOT logicas | booleano | logicas OP_LOG logicas | A_PAREN logicas C_PAREN;
relacionales ::= dato OP_RLC dato | dato OP_IGUAL dato | booleano OP_IGUAL booleano;
booleano ::= identificador | BOOLEANO | relacionales;
dato ::=  id_num | aritmeticas;
id_num ::= identificador | NUM;
identificador ::= ID;
