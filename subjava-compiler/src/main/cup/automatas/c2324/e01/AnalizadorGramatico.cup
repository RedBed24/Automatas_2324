
import automatas.c2324.e01.Analizador;
import java_cup.runtime.*;
import java.io.*;

parser code {:
	public static void main(String args[]) throws Exception {
 		FileInputStream stream = new java.io.FileInputStream(args[0]);
		Reader reader = new InputStreamReader(stream);
		try{
			new parser(new Analizador(reader)).parse();
		}
		catch ( Exception e) {
			System.out.println(e);
			System.out.println("\nAnálisis INCORRECTO !!");
			System.exit(1);}
		System.out.println("\nAnálisis Correcto ");
	}
:}


terminal NUM, ID, TIPO_DATO, BOOLEANO, OP_RLC, OP_IGUAL, OP_ART_SUM, OP_ART_MEN, OP_ART, OP_LOG, OP_NOT, VIS, CLASE, STAT, VOID, OP_UNARIO, WHILE, FOR, DO, RETURN, PUNTO_COMA, DOS_PUNTOS, IGUAL, A_LLAVE, C_LLAVE, A_PAREN, C_PAREN, A_CORCH, C_CORCH, PUNTO, COMA;

non terminal min_1_id_tail, clase, bloque_metodos, metodo, cabecera, parametros, min_1_param, declaracion, min_1_id;

precedence left OP_LOG;
precedence left OP_RLC;
precedence left OP_IGUAL;

precedence left OP_ART;
precedence left OP_NOT;
precedence left OP_ART_SUM;
precedence left OP_ART_MEN;


clase ::= VIS CLASE ID A_LLAVE bloque_metodos C_LLAVE;
bloque_metodos ::= metodo bloque_metodos | metodo;
metodo ::= cabecera;
cabecera ::= VIS STAT;
